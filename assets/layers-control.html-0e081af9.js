import{_ as u,r as n,o as r,c as i,a as s,w as e,b as t,d as a,e as k}from"./app-07f5eddc.js";const d={},h=t("h1",{id:"layerscontrol",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#layerscontrol","aria-hidden":"true"},"#"),a(" LayersControl")],-1),g=t("p",null,[a("The "),t("code",null,"VMapLayersControl"),a(" component is used to switch between different base layers and switch overlays on/off.")],-1),y=t("h2",{id:"basic-usage",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#basic-usage","aria-hidden":"true"},"#"),a(" Basic usage")],-1),m=t("div",{class:"language-vue","data-ext":"vue"},[t("pre",{class:"language-vue"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("script")]),a(),t("span",{class:"token attr-name"},"setup"),a(),t("span",{class:"token attr-name"},"lang"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),a("ts"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),t("span",{class:"token script"},[t("span",{class:"token language-javascript"},[a(`
`),t("span",{class:"token keyword"},"const"),a(" runtimeConfig "),t("span",{class:"token operator"},"="),a(),t("span",{class:"token function"},"useRuntimeConfig"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),a(`
`)])]),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),a("script")]),t("span",{class:"token punctuation"},">")]),a(`

`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("template")]),t("span",{class:"token punctuation"},">")]),a(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("VMap")]),t("span",{class:"token punctuation"},">")]),a(`
    `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("VMapLayersControl")]),t("span",{class:"token punctuation"},">")]),a(`
      `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("VMapOsmTileLayer")]),a(),t("span",{class:"token punctuation"},"/>")]),a(`
      `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("VMapMapboxTileLayer")]),a(`
        `),t("span",{class:"token attr-name"},"id"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),a("streets-v9"),t("span",{class:"token punctuation"},'"')]),a(`
        `),t("span",{class:"token attr-name"},"title"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),a("Mapbox Streets"),t("span",{class:"token punctuation"},'"')]),a(`
        `),t("span",{class:"token attr-name"},":access-token"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),a("runtimeConfig.public.mapboxAccessToken"),t("span",{class:"token punctuation"},'"')]),a(`
      `),t("span",{class:"token punctuation"},"/>")]),a(`
      `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("VMapArcGisTileLayer")]),a(),t("span",{class:"token punctuation"},"/>")]),a(`
      `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("VMapArcGisAeroTileLayer")]),a(),t("span",{class:"token punctuation"},"/>")]),a(`
      `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("VMapOpenTransportTileLayer")]),a(`
        `),t("span",{class:"token attr-name"},":api-key"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),a("runtimeConfig.public.openTransportApiKey"),t("span",{class:"token punctuation"},'"')]),a(`
      `),t("span",{class:"token punctuation"},"/>")]),a(`
      `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("VMapGoogleTileLayer")]),a(),t("span",{class:"token attr-name"},"title"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),a("Google Streets"),t("span",{class:"token punctuation"},'"')]),a(),t("span",{class:"token punctuation"},"/>")]),a(`
      `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("VMapGoogleTileLayer")]),a(),t("span",{class:"token attr-name"},"title"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),a("Google Hybrid"),t("span",{class:"token punctuation"},'"')]),a(),t("span",{class:"token attr-name"},"type"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),a("hybrid"),t("span",{class:"token punctuation"},'"')]),a(),t("span",{class:"token punctuation"},"/>")]),a(`
      `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("VMapGoogleTileLayer")]),a(),t("span",{class:"token attr-name"},"title"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),a("Google Terrain"),t("span",{class:"token punctuation"},'"')]),a(),t("span",{class:"token attr-name"},"type"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),a("terrain"),t("span",{class:"token punctuation"},'"')]),a(),t("span",{class:"token punctuation"},"/>")]),a(`
      `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),a("VMapGoogleTileLayer")]),a(),t("span",{class:"token attr-name"},"title"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),a("Google Satellite"),t("span",{class:"token punctuation"},'"')]),a(),t("span",{class:"token attr-name"},"type"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),a("satellite"),t("span",{class:"token punctuation"},'"')]),a(),t("span",{class:"token punctuation"},"/>")]),a(`
    `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),a("VMapLayersControl")]),t("span",{class:"token punctuation"},">")]),a(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),a("VMap")]),t("span",{class:"token punctuation"},">")]),a(`
`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),a("template")]),t("span",{class:"token punctuation"},">")]),a(`
`)])])],-1),_=t("h2",{id:"api",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#api","aria-hidden":"true"},"#"),a(" API")],-1),f=t("h3",{id:"attributes",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#attributes","aria-hidden":"true"},"#"),a(" Attributes")],-1),b={href:"https://leafletjs.com/reference.html#control-layers",target:"_blank",rel:"noopener noreferrer"},v=k('<table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>currentBaseLayer / v-model</td><td>Index or title of the selected layer.</td><td><code>string | number</code></td><td>0</td></tr><tr><td>currentOverlays / v-model</td><td>Array of indexes or titles for selected overlays.</td><td><code>string[] | number[]</code></td><td>â€”</td></tr><tr><td>useIndexes</td><td>If true, then the number indexes in <code>currentBaseLayer</code> and <code>currentOverlays</code> will be used.</td><td><code>boolean</code></td><td>false</td></tr></tbody></table><h3 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h3><p>No events.</p><h3 id="slots" tabindex="-1"><a class="header-anchor" href="#slots" aria-hidden="true">#</a> Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>The default slot can be used to extend behavior.</td></tr></tbody></table><h3 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes" aria-hidden="true">#</a> Exposes</h3>',6),x=t("thead",null,[t("tr",null,[t("th",null,"Name"),t("th",null,"Description"),t("th",null,"Type")])],-1),L=t("td",null,"layersControl",-1),T=t("td",null,"Leaflet layers control instance.",-1);function V(M,C){const o=n("Demo"),c=n("ClientOnly"),l=n("ExternalLinkIcon"),p=n("RouterLink");return r(),i("div",null,[h,g,y,s(c,null,{default:e(()=>[s(o,{url:"/control/basic-layers-control"},{default:e(()=>[m]),_:1})]),_:1}),_,f,t("p",null,[a("Use layers control options from leaflet "),t("a",b,[a("documentation"),s(l)]),a(".")]),v,t("table",null,[x,t("tbody",null,[t("tr",null,[L,T,t("td",null,[a("Ref<"),s(p,{to:"/components/types.html#control-layers"},{default:e(()=>[a("Control.Layers")]),_:1}),a(">")])])])])])}const G=u(d,[["render",V],["__file","layers-control.html.vue"]]);export{G as default};
